% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lifetime.mle.R
\name{lifetime.mle}
\alias{lifetime.mle}
\title{Compute the Minimizer for a Given Loss Function.}
\usage{
lifetime.mle(dat, minusloglik, starts, method = "BFGS", hessian = TRUE, ...)
}
\arguments{
\item{dat}{the basic data setup result by \code{coxph.pb.dat.setup}.}

\item{minusloglik}{loss function to minimize, which depends on \code{dat}.}

\item{starts}{starting value for the optimization used in \code{optim} inside the function.}

\item{method}{the optimization method used in \code{optim} inside the function, with the default set to "BFGS".}

\item{hessian}{the Hessian option used in \code{optim} inside the function, with the default set to TRUE.}

\item{...}{additional arguments for \code{optim} inside the function.}
}
\value{
The returned list contains the following components:

\code{call}: the call used in running the function.

\code{coef}: the fitted coefficient, which is the optimizer of the given loss function.

\code{vcov}: the hessian of the given loss function evaluated at \code{coef}.

\code{min}: the value of the given loss function evaluated at \code{coef}.

\code{dat}: the given \code{dat}.

\code{minusloglik}: the given \code{minusloglik}.
}
\description{
This function computes the minimizer for a given loss function, which can be the negative log of the exact partial likelihood for slope estimation or the negative log of the exact likelihood for baseline hazard estimation.
}
\examples{
library(KMsurv)
data("larynx")
cox.fit=coxph(Surv(time, delta)~age+diagyr+factor(stage),data=larynx,method="efron")
bl.fit=survfit(cox.fit, newdata=data.frame(t(c(age=0,diagyr=0,stage=1))))
pb.data.setup=coxph.pb.dat.setup(cox.fit,bl.fit)
pb.slope.fit=lifetime.mle(dat=pb.data.setup, minusloglik=minus.log.partial.PB.discretized, starts=pb.data.setup$beta0)
print(pb.slope.fit)

}
